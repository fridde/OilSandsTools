install.packages("C:/Users/Friedrich.Hehl/Downloads/from_chrome/qmrparser_0.1.2.zip", repos = NULL)
library("OilSandsTools")
library("OilSandsTools")
library("OilSandsTools")
load.all.databases()
source("load.all.databases")
getwd()
rm(list = ls())
main.dir = "C:/Users/Friedrich.Hehl/Dropbox/exjobbet/calculations/R_calc"
setwd(main.dir)
load.all.databases()
source("load.all.databases")
rm(list = ls())
main.dir = "C:/Users/Friedrich.Hehl/Dropbox/exjobbet/calculations/R_calc/OilSandsTools/R/"
#main.dir = "C:/Dropbox/exjobbet/calculations/R_calc"
setwd(main.dir)
library("OilSandsTools")
source("load.all.databases")
source("load.all.databases.r")
load.all.databases()
source("load.all.databases.r")
load.all.databases()
source("load.all.databases.r")
load.all.databases()
getwd()
rm(list = ls())
main.dir = "C:/Users/Friedrich.Hehl/Dropbox/exjobbet/calculations/R_calc/OilSandsTools/"
#main.dir = "C:/Dropbox/exjobbet/calculations/R_calc"
setwd(main.dir)
library("OilSandsTools")
source("R/load.all.databases.r")
load.all.databases()
getwd()
load.all.databases()
all.the.dates
database.names = paste("data/", c("all.the.dates.rda","attribution.table.rda","production.data.rda",
"project.plan.rda", "synonym.names.rda"), sep = "")
for (i in 1:length(database.names)) {
load(database.names[i])
}
rm(list = ls())
main.dir = "C:/Users/Friedrich.Hehl/Dropbox/exjobbet/calculations/R_calc/OilSandsTools/"
#main.dir = "C:/Dropbox/exjobbet/calculations/R_calc"
setwd(main.dir)
library("OilSandsTools")
source("R/load.all.databases.r")
load.all.databases()
dataset = compile.prod.proj()
source("R/quick.load.r")
quick.load()
functions.to.load = list.files(paste(main.dir, "R/", sep = ""))
fix(functions.to.load)
for (ii in 1:length(functions.to.load)){
source(paste(main.dir, "R/", functions.to.load[ii], sep = ""), local = TRUE)
}
functions.to.load = list.files(paste(main.dir, "R/", sep = ""))
fix(functions.to.load)
rm(list = ls())
main.dir = "C:/Users/Friedrich.Hehl/Dropbox/exjobbet/calculations/R_calc/OilSandsTools/"
#main.dir = "C:/Dropbox/exjobbet/calculations/R_calc"
setwd(main.dir)
library("OilSandsTools")
source("R/quick.load.r")
quick.load()
functions.to.load = list.files(paste(main.dir, "R/", sep = ""))
for (ii in 1:length(functions.to.load)){
source(paste(main.dir, "R/", functions.to.load[ii], sep = ""), local = TRUE)
}
rm(list = ls())
main.dir = "C:/Users/Friedrich.Hehl/Dropbox/exjobbet/calculations/R_calc/OilSandsTools/"
#main.dir = "C:/Dropbox/exjobbet/calculations/R_calc"
setwd(main.dir)
library("OilSandsTools")
source("R/quick.load.r")
quick.load()
rm(list = ls())
main.dir = "C:/Users/Friedrich.Hehl/Dropbox/exjobbet/calculations/R_calc/OilSandsTools/"
#main.dir = "C:/Dropbox/exjobbet/calculations/R_calc"
setwd(main.dir)
library("OilSandsTools")
source("R/quick.load.r")
quick.load()
dataset = compile.prod.proj()
browserText()
rm(list = ls())
main.dir = "C:/Users/Friedrich.Hehl/Dropbox/exjobbet/calculations/R_calc/OilSandsTools/"
#main.dir = "C:/Dropbox/exjobbet/calculations/R_calc"
setwd(main.dir)
#library("OilSandsTools")
source("R/quick.load.r")
quick.load()
Q
rm(list = ls())
main.dir = "C:/Users/Friedrich.Hehl/Dropbox/exjobbet/calculations/R_calc/OilSandsTools/"
#main.dir = "C:/Dropbox/exjobbet/calculations/R_calc"
setwd(main.dir)
#library("OilSandsTools")
source("R/quick.load.r")
quick.load()
dataset = compile.prod.proj()
rm(list = ls())
main.dir = "C:/Users/Friedrich.Hehl/Dropbox/exjobbet/calculations/R_calc/OilSandsTools/"
#main.dir = "C:/Dropbox/exjobbet/calculations/R_calc"
setwd(main.dir)
#library("OilSandsTools")
source("R/quick.load.r")
quick.load()
# a few test cases
dataset = compile.prod.proj()
rm(list = ls())
main.dir = "C:/Users/Friedrich.Hehl/Dropbox/exjobbet/calculations/R_calc/OilSandsTools/"
#main.dir = "C:/Dropbox/exjobbet/calculations/R_calc"
setwd(main.dir)
#library("OilSandsTools")
source("R/quick.load.r")
quick.load()
# a few test cases
dataset = compile.prod.proj()
rm(list = ls())
main.dir = "C:/Users/Friedrich.Hehl/Dropbox/exjobbet/calculations/R_calc/OilSandsTools/"
#main.dir = "C:/Dropbox/exjobbet/calculations/R_calc"
setwd(main.dir)
#library("OilSandsTools")
source("R/quick.load.r")
quick.load()
# a few test cases
dataset = compile.prod.proj()
browser(text="compile.prod.proj")
date.column = time.filter(all.the.dates, start.year, end.year)
prognosis.years = as.integer(strsplit(prognosis.years, ",")[[1]])
prognosis.years
prod.values = lapply(date.column, select.production, col.to.check)
prod.values = c()
for (ii in 1:length(date.column)) {
prod.values = c(prod.values, select.production(date.column[ii], col.to.check))
}
1:length(date.column)
date.column = time.filter(all.the.dates, start.year, end.year)
prognosis.years = as.integer(strsplit(prognosis.years, ",")[[1]])
ii = 15
date.column[ii]
date.value = date.column[ii]
col.to.check = NA
literal = FALSE
Values = numeric()
for (ii in 1:length(production.data$Value)){
Values = c(Values, convert.to.barrel.per.day(production.data$Value[ii], production.data$Unit.Def[ii]))
}
Values
!literal
for (ii in 1:length(production.data$Project)) {
production.data$Project[ii] = standardize.name(production.data$Project[ii], type="Project")
production.data$Company[ii] = standardize.name(production.data$Company[ii], type="Company")
}
production.data$Project
nrow(production.data)
Exact.Type = c()
for (ii in 1:nrow(production.data)) {
Exact.Type = c(Exact.Type, return.missing.Type(production.data$Project[ii], production.data$Company[ii]))
}
Exact.Type
.Platform$GUI[1]
cls <- function() {
if (.Platform$GUI[1] != "Rgui")
return(invisible(FALSE))
if (!require(rcom, quietly = TRUE)) # Not shown any way!
stop("Package rcom is required for 'cls()'")
wsh <- comCreateObject("Wscript.Shell")
if (is.null(wsh)) {
return(invisible(FALSE))
} else {
comInvoke(wsh, "SendKeys", "\014")
return(invisible(TRUE))
}
}
cls
cls()
Q
cls <- function() {
if (.Platform$GUI[1] != "Rgui")
return(invisible(FALSE))
if (!require(rcom, quietly = TRUE)) # Not shown any way!
stop("Package rcom is required for 'cls()'")
wsh <- comCreateObject("Wscript.Shell")
if (is.null(wsh)) {
return(invisible(FALSE))
} else {
comInvoke(wsh, "SendKeys", "\014")
return(invisible(TRUE))
}
}
cls()
install.packages("rcom")
cls <- function() {
require(rcom)
wsh <- comCreateObject("Wscript.Shell")
comInvoke(wsh, "SendKeys", "\014")
invisible(wsh)
}
cls()
installstatconnDCOM()
cls <- function() {
require(rcom)
wsh <- comCreateObject("Wscript.Shell")
comInvoke(wsh, "SendKeys", "\014")
invisible(wsh)
}
cls()
require(rcom)
wsh <- comCreateObject("Wscript.Shell")
comInvoke(wsh, "SendKeys", "\014")
invisible(wsh)
rm(list = ls())
main.dir = "C:/Users/Friedrich.Hehl/Dropbox/exjobbet/calculations/R_calc/OilSandsTools/"
#main.dir = "C:/Dropbox/exjobbet/calculations/R_calc"
setwd(main.dir)
#library("OilSandsTools")
source("R/quick.load.r")
quick.load()
# a few test cases
dataset = compile.prod.proj()
browserText
browserText()
browser(text="compile.prod.proj")
date.column = time.filter(all.the.dates, start.year, end.year)
prognosis.years = as.integer(strsplit(prognosis.years, ",")[[1]])
prod.values = c()
for (ii in 1:length(date.column)) {
prod.values = c(prod.values, select.production(date.column[ii], col.to.check))
}
browserText()
rm(list = ls())
main.dir = "C:/Users/Friedrich.Hehl/Dropbox/exjobbet/calculations/R_calc/OilSandsTools/"
#main.dir = "C:/Dropbox/exjobbet/calculations/R_calc"
setwd(main.dir)
#library("OilSandsTools")
source("R/quick.load.r")
quick.load()
# a few test cases
dataset = compile.prod.proj()
Q
rm(list = ls())
main.dir = "C:/Users/Friedrich.Hehl/Dropbox/exjobbet/calculations/R_calc/OilSandsTools/"
#main.dir = "C:/Dropbox/exjobbet/calculations/R_calc"
setwd(main.dir)
source("R/quick.load.r")
quick.load()
# a few test cases
dataset = compile.prod.proj()
date.column = time.filter(all.the.dates, start.year, end.year)
prognosis.years = as.integer(strsplit(prognosis.years, ",")[[1]])
prod.values = c()
for (ii in 1:length(date.column)) {
prod.values = c(prod.values, select.production(date.column[ii], col.to.check))
}
warnings()
prod.values
prog.values = matrix(nrow = length(date.column), ncol = length(prognosis.years))
for (i.year in 1:length(prognosis.years)){
for (i.date in 1:length(date.column)) {
prog.values[i.date,i.year] = select.projects(date.column[i.date], prognosis.years[i.years], col.to.check)
}
}
rm(list = ls())
main.dir = "C:/Users/Friedrich.Hehl/Dropbox/exjobbet/calculations/R_calc/OilSandsTools/"
#main.dir = "C:/Dropbox/exjobbet/calculations/R_calc"
setwd(main.dir)
source("R/quick.load.r")
quick.load()
# a few test cases
dataset = compile.prod.proj()
